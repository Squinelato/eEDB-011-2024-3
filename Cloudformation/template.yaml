AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: 'Stack eedb011-2024-g2 com os recursos do grupo 2 da Especialização Engenharia de Dados e Big Data turma de 2024 para a aula de Ingestão de Dados'

Parameters:

  Course:
    Default: eedb
    Type: String

  Subject:
    Default: 011-2024
    Type: String

  Group:
    Default: g2
    Type: String

  DBInstanceID:
    Default: eEDB
    Description: Database instance
    Type: String
    MinLength: 1
    MaxLength: 63
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and must not end with a hyphen or contain two consecutive hyphens.

  DBName:
    Default: mydb
    Description: Database name
    Type: String

  DBInstanceClass:
    Default: db.t4g.micro
    Description: DB instance class
    Type: String

  DBAllocatedStorage:
    Default: 20
    Description: The size of the database (GiB)
    Type: Number
    MinValue: 20
    MaxValue: 65536
    ConstraintDescription: must be between 20 and 65536 GiB.

  DBUsername:
    NoEcho: true
    Description: Username for MySQL database access
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  DBPassword:
    NoEcho: true
    Description: Password MySQL database access
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  SecretName:
    Default: mydb-secret
    Description: Secret name in AWS Secrets Manager
    Type: String

  subnetID:
    NoEcho: true
    Type: String

  availabilityZone:
    NoEcho: true
    Type: String

  securityGroupId:
    NoEcho: true
    Type: String

Resources:

############################################################################################################
########################################      BUCKETS      #################################################
############################################################################################################

  BucketArtifacts:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Course}${Subject}-${Group}-${AWS::AccountId}-artifacts
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados

  BucketIngestion:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Course}${Subject}-${Group}-${AWS::AccountId}-ingestion
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados

  BucketRaw:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Course}${Subject}-${Group}-${AWS::AccountId}-raw
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados

  BucketTrusted:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Course}${Subject}-${Group}-${AWS::AccountId}-trusted
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados


  BucketDelivery:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Course}${Subject}-${Group}-${AWS::AccountId}-delivery
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados

############################################################################################################
###########################################      RDS      ##################################################
############################################################################################################

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub ${Course}${Subject}${Group}
      DBName: !Ref DBName
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      Engine: MySQL
      EngineVersion: "8.0.33"
      MultiAZ: false
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados

  SecretStore:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub ${SecretName}
      Description: 'Credentials for MySQL RDS instance'
      SecretString:
        Fn::Sub: |
          {
            "username": "${DBUsername}",
            "password": "${DBPassword}",
            "engine": "mysql",
            "host": "${DBInstance.Endpoint.Address}",
            "port": "${DBInstance.Endpoint.Port}",
            "dbname": "eedb011"
          }
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados

############################################################################################################
###########################################      GLUE      #################################################
############################################################################################################

  GlueDatabaseRaw:
    Type: 'AWS::Glue::Database'
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: 'rwzd'
        Description: 'Database da camada Raw'

  GlueDatabaseTrusted:
    Type: 'AWS::Glue::Database'
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: 'trzd'
        Description: 'Database da camada Trusted'

  GlueDatabaseDelivery:
    Type: 'AWS::Glue::Database'
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: 'dlzd'
        Description: 'Database da camada Delivery'
  
  GlueConnectionSubnet:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId
      ConnectionInput:
        Name: !Sub "${AWS::StackName}-vpc-connection"
        ConnectionType: NETWORK
        PhysicalConnectionRequirements:
          SubnetId: !Ref subnetID
          AvailabilityZone: !Ref availabilityZone
          SecurityGroupIdList:
            - !Ref securityGroupId

  GlueJobRawBanks:
    Type: 'AWS::Glue::Job'
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-banks-raw
      Role: !GetAtt IAMRole.Arn
      Command:
        Name: 'glueetl'
        ScriptLocation: !Sub 's3://${BucketArtifacts}/glue-scripts/banks-raw.py'
        PythonVersion: '3'
      DefaultArguments:
        "--extra-py-files": !Sub 's3://${BucketArtifacts}/python-libs/unidecode.zip'
        "--enable-glue-datacatalog": ""
        "--enable-metrics": ""
        "--file": ""
        "--bucket": ""
        "--raw_bucket": !Ref BucketRaw
        "--database": "rwzd"
        "--tablename": "banks"
      MaxRetries: 0
      GlueVersion: '4.0'
      Timeout: 60
      NumberOfWorkers: 2
      WorkerType: 'G.1X'

  GlueJobRawEmployees:
    Type: 'AWS::Glue::Job'
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-employees-raw
      Role: !GetAtt IAMRole.Arn
      Command:
        Name: 'glueetl'
        ScriptLocation: !Sub 's3://${BucketArtifacts}/glue-scripts/employees-raw.py'
        PythonVersion: '3'
      DefaultArguments:
        "--extra-py-files": !Sub 's3://${BucketArtifacts}/python-libs/unidecode.zip'
        "--enable-glue-datacatalog": ""
        "--enable-metrics": ""
        "--file": ""
        "--bucket": ""
        "--raw_bucket": !Ref BucketRaw
        "--database": "rwzd"
        "--tablename": "employees"
      MaxRetries: 0
      GlueVersion: '4.0'
      Timeout: 60
      NumberOfWorkers: 2
      WorkerType: 'G.1X'

  GlueJobRawClaims:
    Type: 'AWS::Glue::Job'
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-claims-raw
      Role: !GetAtt IAMRole.Arn
      Command:
        Name: 'glueetl'
        ScriptLocation: !Sub 's3://${BucketArtifacts}/glue-scripts/claims-raw.py'
        PythonVersion: '3'
      DefaultArguments:
        "--extra-py-files": !Sub 's3://${BucketArtifacts}/python-libs/unidecode.zip'
        "--enable-glue-datacatalog": ""
        "--enable-metrics": ""
        "--file": ""
        "--bucket": ""
        "--raw_bucket": !Ref BucketRaw
        "--database": "rwzd"
        "--tablename": "claims"
      MaxRetries: 0
      GlueVersion: '4.0'
      Timeout: 60
      NumberOfWorkers: 2
      WorkerType: 'G.1X'

  GlueJobTrustedBanks:
    Type: 'AWS::Glue::Job'
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-banks-trusted
      Role: !GetAtt IAMRole.Arn
      Command:
        Name: 'glueetl'
        ScriptLocation: !Sub 's3://${BucketArtifacts}/glue-scripts/banks-trusted.py'
        PythonVersion: '3'
      DefaultArguments:
        "--extra-py-files": !Sub 's3://${BucketArtifacts}/python-libs/unidecode.zip'
        "--enable-glue-datacatalog": ""
        "--enable-metrics": ""
        "--file": ""
        "--bucket": ""
        "--trusted_bucket": !Ref BucketTrusted
        "--database": "trzd"
        "--tablename": "banks"
      MaxRetries: 0
      GlueVersion: '4.0'
      Timeout: 60
      NumberOfWorkers: 2
      WorkerType: 'G.1X'

  GlueJobTrustedEmployees:
    Type: 'AWS::Glue::Job'
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-employees-trusted
      Role: !GetAtt IAMRole.Arn
      Command:
        Name: 'glueetl'
        ScriptLocation: !Sub 's3://${BucketArtifacts}/glue-scripts/employees-trusted.py'
        PythonVersion: '3'
      DefaultArguments:
        "--extra-py-files": !Sub 's3://${BucketArtifacts}/python-libs/unidecode.zip'
        "--enable-glue-datacatalog": ""
        "--enable-metrics": ""
        "--file": ""
        "--bucket": ""
        "--trusted_bucket": !Ref BucketTrusted
        "--database": "trzd"
        "--tablename": "employees"
      MaxRetries: 0
      GlueVersion: '4.0'
      Timeout: 60
      NumberOfWorkers: 2
      WorkerType: 'G.1X'

  GlueJobTrustedClaims:
    Type: 'AWS::Glue::Job'
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-claims-trusted
      Role: !GetAtt IAMRole.Arn
      Command:
        Name: 'glueetl'
        ScriptLocation: !Sub 's3://${BucketArtifacts}/glue-scripts/claims-trusted.py'
        PythonVersion: '3'
      DefaultArguments:
        "--extra-py-files": !Sub 's3://${BucketArtifacts}/python-libs/unidecode.zip'
        "--enable-glue-datacatalog": ""
        "--enable-metrics": ""
        "--file": ""
        "--bucket": ""
        "--trusted_bucket": !Ref BucketTrusted
        "--database": "trzd"
        "--tablename": "claims"
      MaxRetries: 0
      GlueVersion: '4.0'
      Timeout: 60
      NumberOfWorkers: 2
      WorkerType: 'G.1X'

  GlueJobDelivery:
    Type: 'AWS::Glue::Job'
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-delivery
      Role: !GetAtt IAMRole.Arn
      Command:
        Name: 'glueetl'
        ScriptLocation: !Sub 's3://${BucketArtifacts}/glue-scripts/bank-employment-satisfaction-delivery.py'
        PythonVersion: '3'
      Connections:
        Connections:
          - !Ref GlueConnectionSubnet
      DefaultArguments:
        "--extra-py-files": !Sub 's3://${BucketArtifacts}/python-libs/unidecode.zip'
        "--enable-glue-datacatalog": ""
        "--enable-metrics": ""
        "--delivery_bucket": !Ref BucketDelivery
        "--database": "dlzd"
        "--tablename": "bank_employment_satisfaction"
        "--secretname": "mydb-secret"
      MaxRetries: 0
      GlueVersion: '4.0'
      Timeout: 60
      NumberOfWorkers: 2
      WorkerType: 'G.1X'

############################################################################################################
#######################################      DATA QUALITY       ############################################
############################################################################################################

  DataQualityRulesetBanks:
    Type: 'AWS::Glue::DataQualityRuleset'
    Properties:
      Name: !Sub '${AWS::StackName}-banks-ruleset'
      Description: 'Data Quality Ruleset for trzd.banks table'
      Ruleset: 'Rules = [
        IsComplete "segment",
        IsComplete "cnpj",
        IsComplete "financial_institution_name",
        IsComplete "sk_cnpj_segment",
        IsComplete "filename" ]'
      TargetTable:
        DatabaseName: 'trzd'
        TableName: 'banks'

  DataQualityRulesetClaims:
    Type: 'AWS::Glue::DataQualityRuleset'
    Properties:
      Name: !Sub '${AWS::StackName}-claims-ruleset'
      Description: 'Data Quality Ruleset for trzd.claims table'
      Ruleset: 'Rules = [
        IsComplete "year_claim",
        IsComplete "quarter_claim",
        IsComplete "category",
        IsComplete "bank_type",
        IsComplete "cnpj",
        IsComplete "financial_institution_name",
        IsComplete "bank_index",        
        IsComplete "number_of_regulated_proceeding_complaints",
        IsComplete "number_of_regulated_other_complaints",
        IsComplete "number_of_unregulated_complaints",
        IsComplete "total_number_of_complaints",
        IsComplete "total_number_of_ccs_and_scr_customers",
        IsComplete "number_of_ccs_customers",
        IsComplete "number_of_scr_customers",
        IsComplete "sk_financial_institution_name",
        IsComplete "filename" ]'
      TargetTable:
        DatabaseName: 'trzd'
        TableName: 'claims'

  DataQualityRulesetEmployees:
    Type: 'AWS::Glue::DataQualityRuleset'
    Properties:
      Name: !Sub '${AWS::StackName}-employees-ruleset'
      Description: 'Data Quality Ruleset for trzd.employees table'
      Ruleset: 'Rules = [
        IsComplete "employer_name",
        IsComplete "reviews_count",
        IsComplete "culture_count",
        IsComplete "salaries_count",
        IsComplete "benefits_count",
        IsComplete "employer_website",
        IsComplete "employer_headquarters",
        IsComplete "employer_founded",
        IsComplete "employer_industry",
        IsComplete "employer_revenue",
        IsComplete "url",
        IsComplete "general_score",
        IsComplete "culture_values_score",
        IsComplete "diversity_inclusion_score",
        IsComplete "life_quality_score",
        IsComplete "senior_leadership_score",
        IsComplete "compensation_benefits_score",
        IsComplete "career_opportunities_score",
        IsComplete "recommendation_score",
        IsComplete "company_positive_score",
        IsComplete "segment",
        IsComplete "financial_institution_name",
        IsComplete "match_percent",
        IsComplete "sk_financial_institution_name",
        IsComplete "filename" ]'
      TargetTable:
        DatabaseName: 'trzd'
        TableName: 'employees'

  DataQualityRulesetBankEmploymentSatisfaction:
    Type: 'AWS::Glue::DataQualityRuleset'
    Properties:
      Name: !Sub '${AWS::StackName}-bank-employment-satisfaction-ruleset'
      Description: 'Data Quality Ruleset for trzd.bank_employment_satisfaction table'
      Ruleset: 'Rules = [
        IsComplete "sk_cnpj_segment",
        IsComplete "cnpj",
        IsComplete "year_claim",
        IsComplete "quarter_claim",
        IsComplete "category",
        IsComplete "bank_type",
        IsComplete "financial_institution_name",
        IsComplete "bank_index",
        IsComplete "number_of_regulated_proceeding_complaints",
        IsComplete "number_of_regulated_other_complaints",
        IsComplete "number_of_unregulated_complaints",
        IsComplete "total_number_of_complaints",
        IsComplete "total_number_of_ccs_and_scr_customers",
        IsComplete "number_of_ccs_customers",
        IsComplete "number_of_scr_customers",
        IsComplete "sk_financial_institution_name",
        IsComplete "segment",
        IsComplete "employer_name",
        IsComplete "reviews_count",
        IsComplete "culture_count",
        IsComplete "salaries_count",
        IsComplete "benefits_count",
        IsComplete "employer_website",
        IsComplete "employer_headquarters",
        IsComplete "employer_founded",
        IsComplete "employer_industry",
        IsComplete "employer_revenue",
        IsComplete "url",
        IsComplete "general_score",
        IsComplete "culture_values_score",
        IsComplete "diversity_inclusion_score",
        IsComplete "life_quality_score",
        IsComplete "senior_leadership_score",
        IsComplete "compensation_benefits_score",
        IsComplete "career_opportunities_score",
        IsComplete "recommendation_score",
        IsComplete "company_positive_score",
        IsComplete "match_percent" ]'
      TargetTable:
        DatabaseName: 'dlzd'
        TableName: 'bank_employment_satisfaction'

############################################################################################################
#######################################      STEP FUNCTION      ############################################
############################################################################################################

  StepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-step-function
      Role: !GetAtt IAMRole.Arn
      Definition:
        StartAt: Decide
        States:
          Decide:
            Type: Choice
            Choices:
              - Variable: "$.detail.object.key"
                StringMatches: "Dados/Bancos/*"
                Next: RunGlueJobBanksRaw
              - Variable: "$.detail.object.key"
                StringMatches: "Dados/Empregados/*"
                Next: RunGlueJobEmployeesRaw
              - Variable: "$.detail.object.key"
                StringMatches: "Dados/Reclamacoes/*"
                Next: RunGlueJobClaimsRaw
            Default: InvalidExecution
          RunGlueJobBanksRaw:
            Type: Task
            Resource: arn:aws:states:::glue:startJobRun.sync
            Parameters:
              JobName: !Ref GlueJobRawBanks
              Arguments: {
                  "--file.$": "$$.Execution.Input.detail.object.key",
                  "--bucket.$": "$$.Execution.Input.detail.bucket.name"
                }
            Next: RunGlueJobBanksTrusted
          RunGlueJobBanksTrusted:
            Type: Task
            Resource: arn:aws:states:::glue:startJobRun.sync
            Parameters:
              JobName: !Ref GlueJobTrustedBanks
              Arguments: {
                  "--file.$": "$$.Execution.Input.detail.object.key",
                  "--bucket.$": "$$.Execution.Input.detail.bucket.name"
                }
            End: true
          RunGlueJobEmployeesRaw:
            Type: Task
            Resource: arn:aws:states:::glue:startJobRun.sync
            Parameters:
              JobName: !Ref GlueJobRawEmployees
              Arguments: {
                  "--file.$": "$$.Execution.Input.detail.object.key",
                  "--bucket.$": "$$.Execution.Input.detail.bucket.name"
                }
            Next: RunGlueJobEmployeesTrusted
          RunGlueJobEmployeesTrusted:
            Type: Task
            Resource: arn:aws:states:::glue:startJobRun.sync
            Parameters:
              JobName: !Ref GlueJobTrustedEmployees
              Arguments: {
                  "--file.$": "$$.Execution.Input.detail.object.key",
                  "--bucket.$": "$$.Execution.Input.detail.bucket.name"
                }
            End: true
          RunGlueJobClaimsRaw:
            Type: Task
            Resource: arn:aws:states:::glue:startJobRun.sync
            Parameters:
              JobName: !Ref GlueJobRawClaims
              Arguments: {
                  "--file.$": "$$.Execution.Input.detail.object.key",
                  "--bucket.$": "$$.Execution.Input.detail.bucket.name"
                }
            Next: RunGlueJobClaimsTrusted
          RunGlueJobClaimsTrusted:
            Type: Task
            Resource: arn:aws:states:::glue:startJobRun.sync
            Parameters:
              JobName: !Ref GlueJobTrustedClaims
              Arguments: {
                  "--file.$": "$$.Execution.Input.detail.object.key",
                  "--bucket.$": "$$.Execution.Input.detail.bucket.name"
                }
            End: true
          InvalidExecution:
            Type: Fail
      Tags:
        "Projeto": "Ingestao de Dados"


  StepFunctionDelivery:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${Course}${Subject}-${Group}-step-function-delivery
      Role: !GetAtt IAMRole.Arn
      Definition:
        StartAt: RunGlueJobDelivery
        States:
          RunGlueJobDelivery:
            Type: Task
            Resource: arn:aws:states:::glue:startJobRun.sync
            Parameters:
              JobName: !Ref GlueJobDelivery
            End: true
      Tags:
        "Projeto": "Ingestao de Dados"

############################################################################################################
#######################################      EVENT BRIDGE      #############################################
############################################################################################################

  EventBridgeRuleBank:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        resources:
          - !GetAtt BucketIngestion.Arn
        detail:
          object:
            key:
              - prefix: "Dados/Bancos/"
      Targets:
        - Arn: !GetAtt StepFunction.Arn
          Id: "StepFunctionTargetBancos"
          RoleArn: !GetAtt IAMRole.Arn

  EventBridgeRuleEmployees:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        resources:
          - !GetAtt BucketIngestion.Arn
        detail:
          object:
            key:
              - prefix: "Dados/Empregados/"
      Targets:
        - Arn: !GetAtt StepFunction.Arn
          Id: "StepFunctionTargetEmpregados"
          RoleArn: !GetAtt IAMRole.Arn

  EventBridgeRuleClaims:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        resources:
          - !GetAtt BucketIngestion.Arn
        detail:
          object:
            key:
              - prefix: "Dados/Reclamacoes/"
      Targets:
        - Arn: !GetAtt StepFunction.Arn
          Id: "StepFunctionTargetReclamacoes"
          RoleArn: !GetAtt IAMRole.Arn

  EventBridgeSchedulerDelivery:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: "Scheduler for triggering the delivery step function"
      State: 'ENABLED'
      ScheduleExpression: 'rate(10 minutes)'
      Targets:
        - Arn: !GetAtt StepFunctionDelivery.Arn
          Id: "StepFunctionDeliveryScheduler"
          RoleArn: !GetAtt IAMRole.Arn

############################################################################################################
#########################################      IAM ROLE      ###############################################
############################################################################################################

  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
                - states.amazonaws.com
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-Role"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
      Tags:
        - Key: Projeto
          Value: Ingestao de Dados